import numpy as np

def EliminacaoGauss(a,b):

  for i in range(a.shape[0]):
    for x in range(a.shape[0]-(i+1)):
      k = a[i+x+1][i]/a[i][i]
      b[i+x+1] -= k*b[i]
      for j in range(a.shape[0]):
        a[i+x+1][j] -= (k*a[i][j])

  print(a)
  print(b)

  c = np.zeros(b.shape)

  for m in range(b.shape[0]):
    for n in range(m):
      b[b.shape[0]-(m+1)] -= c[b.shape[0]-(n+1)] * a[b.shape[0]-(m+1)][b.shape[0]-(n+1)]
    c[b.shape[0]-(m+1)] = b[b.shape[0]-(m+1)] / a[b.shape[0]-(m+1)][b.shape[0]-(m+1)]

  print(c)

A = np.array([[4.0, 3.0, 2.0], [-2.0, 2.0, 3.0], [3.0, -5.0, 2.0]])
B = np.array([25.0, -10.0, -4.0])

EliminacaoGauss(A,B)

A = np.array([[4.0, 3.0, 2.0], [-2.0, 2.0, 3.0], [3.0, -5.0, 2.0]])
B = np.array([25.0, -10.0, -4.0])

result = np.linalg.solve(A, B)
print(result)
